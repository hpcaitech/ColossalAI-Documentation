"use strict";(self.webpackChunkagile_docs=self.webpackChunkagile_docs||[]).push([[3816],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return f}});var i=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),c=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=c(e.components);return i.createElement(s.Provider,{value:n},e.children)},p={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},d=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),d=c(t),f=r,m=d["".concat(s,".").concat(f)]||d[f]||p[f]||a;return t?i.createElement(m,o(o({ref:n},u),{},{components:t})):i.createElement(m,o({ref:n},u))}));function f(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=d;var l={};for(var s in n)hasOwnProperty.call(n,s)&&(l[s]=n[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var c=2;c<a;c++)o[c]=t[c];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}d.displayName="MDXCreateElement"},1765:function(e,n,t){t.r(n),t.d(n,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return c},toc:function(){return u},default:function(){return d}});var i=t(3117),r=t(102),a=(t(7294),t(3905)),o=["components"],l={},s="Initialize Features",c={unversionedId:"basics/initialize_features",id:"version-v0.2.2/basics/initialize_features",title:"Initialize Features",description:"Author: Shenggui Li, Siqi Mai",source:"@site/i18n/en/docusaurus-plugin-content-docs/version-v0.2.2/basics/initialize_features.md",sourceDirName:"basics",slug:"/basics/initialize_features",permalink:"/docs/basics/initialize_features",tags:[],version:"v0.2.2",frontMatter:{}},u=[{value:"Introduction",id:"introduction",children:[],level:2},{value:"Usage",id:"usage",children:[],level:2}],p={toc:u};function d(e){var n=e.components,t=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"initialize-features"},"Initialize Features"),(0,a.kt)("p",null,"Author: Shenggui Li, Siqi Mai"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"Prerequisite:")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/concepts/distributed_training"},"Distributed Training")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"/docs/concepts/colossalai_overview"},"Colossal-AI Overview"))),(0,a.kt)("h2",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"In this tutorial, we will cover the use of ",(0,a.kt)("inlineCode",{parentName:"p"},"colossalai.initialize")," which injects features into your training components\n(e.g. model, optimizer, dataloader) seamlessly. Calling ",(0,a.kt)("inlineCode",{parentName:"p"},"colossalai.initialize")," is the standard procedure before you run\ninto your training loops."),(0,a.kt)("p",null,"In the section below, I will cover how ",(0,a.kt)("inlineCode",{parentName:"p"},"colossalai.initialize")," works and what we should take note  of."),(0,a.kt)("h2",{id:"usage"},"Usage"),(0,a.kt)("p",null,"In a typical workflow, we will launch distributed environment at the beginning of our training script.\nAfterwards, we will instantiate our objects such as model, optimizer, loss function, dataloader etc. At this moment, ",(0,a.kt)("inlineCode",{parentName:"p"},"colossalai.initialize"),"\ncan come in to inject features into these objects. A pseudo-code example is like below:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-python"},"import colossalai\nimport torch\n...\n\n\n# launch distributed environment\ncolossalai.launch(config='./config.py', ...)\n\n# create your objects\nmodel = MyModel()\noptimizer = torch.optim.Adam(model.parameters(), lr=0.001)\ncriterion = torch.nn.CrossEntropyLoss()\ntrain_dataloader = MyTrainDataloader()\ntest_dataloader = MyTrainDataloader()\n\n# initialize features\nengine, train_dataloader, test_dataloader, _ = colossalai.initialize(model,\n                                                                     optimizer,\n                                                                     criterion,\n                                                                     train_dataloader,\n                                                                     test_dataloader)\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"colossalai.initialize")," function will return an ",(0,a.kt)("inlineCode",{parentName:"p"},"Engine")," object. The engine object is a wrapper\nfor model, optimizer and loss function. ",(0,a.kt)("strong",{parentName:"p"},"The engine object will run with features specified in the config file."),"\nMore details about the engine can be found in the ",(0,a.kt)("a",{parentName:"p",href:"/docs/basics/engine_trainer"},"Use Engine and Trainer in Training"),"."))}d.isMDXComponent=!0}}]);